C:30:"PHPUnit\Runner\TestResultCache":4440:{a:2:{s:7:"defects";a:9:{s:17:"UserTest::testAge";i:3;s:28:"App\Models\UserTest::testAge";i:4;s:18:"UserTest::testAge2";i:3;s:38:"UserTest::testAge2 with data set "two"";i:3;s:40:"UserTest::testAge2 with data set "three"";i:3;s:7:"Warning";i:6;s:49:"NegativeSuccessUserTest::testNameWithEqualsAssert";i:4;s:103:"PositiveSuccess\SimpleCalculator\PositiveSuccessSimpleCalculatorCLIFunctionsTest::testAgeWithSameAssert";i:4;s:119:"PositiveSuccess\SimpleCalculator\PositiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithSameAssert";i:3;}s:5:"times";a:46:{s:17:"UserTest::testAge";d:0.010999999999999999;s:28:"App\Models\UserTest::testAge";d:0.016;s:18:"UserTest::testAge2";d:0.0030000000000000001;s:35:"UserTest::testAge2 with data set #0";d:0;s:35:"UserTest::testAge2 with data set #1";d:0;s:35:"UserTest::testAge2 with data set #2";d:0;s:38:"UserTest::testAge2 with data set "one"";d:0;s:38:"UserTest::testAge2 with data set "two"";d:0;s:40:"UserTest::testAge2 with data set "three"";d:0;s:37:"UserTest::testAge with data set "one"";d:0.012999999999999999;s:37:"UserTest::testAge with data set "two"";d:0;s:39:"UserTest::testAge with data set "three"";d:0;s:38:"UserTest::testAge1 with data set "one"";d:0.0089999999999999993;s:38:"UserTest::testAge1 with data set "two"";d:0;s:40:"UserTest::testAge1 with data set "three"";d:0;s:18:"UserTest::testAge1";d:0.01;s:38:"UserTest1::testAge with data set "one"";d:0.01;s:38:"UserTest1::testAge with data set "two"";d:0;s:40:"UserTest1::testAge with data set "three"";d:0;s:19:"UserTest1::testName";d:0.002;s:31:"UserTest::testAgeWithSameAssert";d:0;s:33:"UserTest::testAgeWithEqualsAssert";d:0;s:52:"NegativeSuccessUserTest::testAge with data set "one"";d:0.01;s:52:"NegativeSuccessUserTest::testAge with data set "two"";d:0;s:54:"NegativeSuccessUserTest::testAge with data set "three"";d:0;s:33:"NegativeSuccessUserTest::testName";d:0.002;s:46:"PositiveSuccessUserTest::testAgeWithSameAssert";d:0;s:48:"PositiveSuccessUserTest::testAgeWithEqualsAssert";d:0;s:7:"Warning";d:0.002;s:49:"NegativeSuccessUserTest::testNameWithEqualsAssert";d:0.001;s:81:"NegativeSuccessUserTest::testNameWithDataProviderEqualsAssert with data set "one"";d:0.001;s:81:"NegativeSuccessUserTest::testNameWithDataProviderEqualsAssert with data set "two"";d:0;s:83:"NegativeSuccessUserTest::testNameWithDataProviderEqualsAssert with data set "three"";d:0.001;s:103:"PositiveSuccess\SimpleCalculator\PositiveSuccessSimpleCalculatorCLIFunctionsTest::testAgeWithSameAssert";d:0.0040000000000000001;s:119:"PositiveSuccess\SimpleCalculator\PositiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithSameAssert";d:0.017999999999999999;s:151:"PositiveSuccess\SimpleCalculator\PositiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "one"";d:0;s:151:"PositiveSuccess\SimpleCalculator\PositiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "two"";d:0;s:153:"PositiveSuccess\SimpleCalculator\PositiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "three"";d:0;s:119:"PositiveSuccess\SimpleCalculator\PssitiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithSameAssert";d:0;s:151:"PositiveSuccess\SimpleCalculator\PssitiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "one"";d:0;s:151:"PositiveSuccess\SimpleCalculator\PssitiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "two"";d:0.001;s:153:"PositiveSuccess\SimpleCalculator\PssitiveSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "three"";d:0;s:119:"PositiveSuccess\SimpleCalculator\NegativeSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithSameAssert";d:0;s:151:"PositiveSuccess\SimpleCalculator\NegativeSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "one"";d:0;s:151:"PositiveSuccess\SimpleCalculator\NegativeSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "two"";d:0;s:153:"PositiveSuccess\SimpleCalculator\NegativeSuccessSimpleCalculatorCLIFunctionsTest::testFunctionCheckValuesWithDataProviderSameAssert with data set "three"";d:0.002;}}}